/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.43
 * Generated at: 2020-04-09 07:03:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class User_005fCoinPayment_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1566188446000L));
    _jspx_dependants.put("jar:file:/Users/kdm/JavaWorkspace/kh_final/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Project_funding/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("    \n");
 request.setCharacterEncoding("UTF-8"); 
      out.write('\n');
 response.setContentType("text/html; charset=UTF-8"); 
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-1.12.4.min.js\" ></script>\n");
      out.write("<script type=\"text/javascript\" src=\"https://cdn.iamport.kr/js/iamport.payment-1.1.5.js\"></script>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("$(function() {\n");
      out.write("\t\n");
      out.write("\t\tvar IMP = window.IMP;\n");
      out.write("\t\tIMP.init('imp87209214'); // 아임포트 관리자 페이지의 \"시스템 설정\" > \"내 정보\" 에서 확인 가능\n");
      out.write("\t\t\n");
      out.write("\t\tIMP.request_pay({\n");
      out.write("\t\t    pg : 'inicis', // version 1.1.0부터 지원.\n");
      out.write("\t\t    pay_method : 'card',\n");
      out.write("\t\t    merchant_uid : 'merchant_' + new Date().getTime(),\n");
      out.write("\t\t    name : 'PUDING 결제', //String\n");
      out.write("\t\t    amount : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${amount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(",\t\t\t//asd\n");
      out.write("\t\t    buyer_email : 'user_email',\t//String\n");
      out.write("\t\t    buyer_name : 'user_id',\t\t\t\t//String\n");
      out.write("\t\t    buyer_tel : '010-1234-5678',\t\t//String\n");
      out.write("\t\t    buyer_addr : '서울특별시 강남구 삼성동',\t//String\n");
      out.write("\t\t    buyer_postcode : '123-456',\t\t\t//String\n");
      out.write("\t\t    m_redirect_url : 'https://www.yourdomain.com/payments/complete'\n");
      out.write("\t\t}, function(rsp) {\n");
      out.write("\t\t    if ( rsp.success ) {\n");
      out.write("\t\t        var msg = '결제가 완료되었습니다.';\n");
      out.write("// \t\t        msg += '고유ID : ' + rsp.imp_uid;\n");
      out.write("// \t\t        msg += '상점 거래ID : ' + rsp.merchant_uid;\n");
      out.write("// \t\t        msg += '결제 금액 : ' + rsp.paid_amount;\n");
      out.write("// \t\t        msg += '카드 승인번호 : ' + rsp.apply_num;\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t    } else {\n");
      out.write("\t\t        var msg = '결제에 실패하였습니다.';\n");
      out.write("\t\t        msg += '에러내용 : ' + rsp.error_msg;\n");
      out.write("\t\t    }\n");
      out.write("\t\t    alert(msg);\n");
      out.write("\t\t    location.href=\"user_coin1.do?user_no=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userdto.user_no}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&page=1&amount=\"+rsp.paid_amount;\n");
      out.write("\t\t});\n");
      out.write("\n");
      out.write("})\n");
      out.write("\n");
      out.write("\t\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\t<h1> 결제 진행중입니다. </h1>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
